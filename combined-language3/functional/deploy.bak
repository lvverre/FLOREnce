#lang racket

(require "environment.rkt"
         "../defmac.rkt"
         "reactor.rkt"
         "datastructures.rkt"
         "../root-env.rkt")

(provide (all-defined-out))


(define (register-to-event! event new-deployedR input-idx)
    (let deployment-comparisson-loop
      ((deployments (functional-node-connectors  event)))
      (cond ((null? deployments)
             (set-functional-node-connectors! event
                                     (cons (func->func-connector (list input-idx)
                                                        new-deployedR)
                                           (functional-node-connectors event))))
            ((eq? (functional-connector-app-info (car deployments))
                  new-deployedR)
             (set-functional-connector-input-info! (car deployments)
                                              (cons input-idx
                                                    (functional-connector-input-info (car deployments)))))
            (else
             (deployment-comparisson-loop (cdr deployments))))))