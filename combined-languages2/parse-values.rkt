#lang racket
(provide (all-defined-out))
(struct nmb (val) #:transparent)
(struct str (val) #:transparent)
(struct var-exp (val) #:transparent)
(struct bool ())
(struct true-struct bool ())
(struct false-struct bool ())
(struct undefined-struct ())
(struct empty-struct ())
(struct pair (first last))
(struct app (op args))
(struct def (var val) #:transparent)
(struct sym (val) #:transparent)
(struct if-exp (pred then else))
(struct set (var val))

(define undefined (undefined-struct))
(define true (true-struct))
(define false (false-struct))
(define empty (empty-struct))
