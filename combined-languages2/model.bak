#lang racket
(require "defmac.rkt")

(

(define (eval-datastructures datastructure)
  (

(defmac (model: definition-exprs ...)
  #:keywords env
  (let* ((definitions '(definition-exprs ...))
         (number-of-def (length definitions))
         (model-layout (make-vector number-of-def 0))
         (model-init (make-vector number-of-def 0)))
    (for/fold ([idx 0])
              ([def definitions])
      (match def
        [`(def: ,var ,right-expr)
         #:when (symbol? var)
         ]
        [