#lang reader "reader.rkt"
(main:
 (model:
  (def: nothing 0)
  (def: cFanta 120)
  (def: cCola 120)
  (def: cIce-tea 120)
  (def: cOrange-juice 80)
  (def: cBig-mac 290)
  (def: cVeggie 243)
  (def: cChicken 283)
  (def: cBacon 312)
  (def: cChocalate-ice 190)
  (def: cVanille-ice 180)
  (def: cVanille-ice-nuts 201)
  (def: cChicken-nuggets 240)
  (def: cChicken-wings 240)
  (def: cCheese-croquettes 230)
  (def: cfries-small 160)
  (def: cfries-big 290)
  (def: cSalade-small 80)
  (def: cSalade-big 160)
  (def: cFrit-fondue 310)
  (def: cMayo 50)
  (def: cKetchup 50)

  
  (def: small? #t)
  (def: big? #f)

  (def: fanta (sym fanta))
  (def: cola (sym cola))
  (def: ice-tea (sym ice-tea))
  (def: orange-juice (sym orange-juice))
  (def: big-mac (sym big-mac))
  (def: veggie (sym veggie))
  (def: chicken (sym chicken))
  (def: bacon (sym bacon))
  (def: chocolate-ice (sym chocolate-ice))
  (def: vanille-ice (sym vanille-ice))
 ; (def: vanille-ice-nuts (sym vanille-ice-nuts))
  (def: chicken-nuggets (sym chicken-nugget))
  (def: chicken-wings (sym chicken-wings))
  (def: cheese-croquettes (sym cheese-croquettes))
  (def: fries-small (sym fries-small))
  (def: fries-big (sym fries-big))
  (def: salade-small (sym salade-small))
  (def: salade-big (sym salade-big))
  (def: frit-fondue (sym frit-fondue))
  (def: mayo (sym mayo))
  (def: ketchup (sym ketchup))
  
  

  (def: pFanta 3.1)
  (def: pCola 3.1)
  (def: pIce-tea 3.1)
  (def: pOrange-juice 2.2)
  (def: pBig-mac 7.3)
  (def: pVeggie 5.1)
  (def: pBacon 6.5)
  (def: pChicken 7.1)
  (def: pChocolate-ice 2.2)
  (def: pVanille-ice 2.2)
 ; (def: pVanille-ice-nuts 2.7)
  (def: pSalade-small 3.5)
  (def: pSalade-big 6.5)
  (def: pFries-small 3.5)
  (def: pFries-big 4.5)
  (def: pFrit-fondue 4.7)
  (def: pChicken-nuggets 4.7)
  (def: pChicken-wings 4.7)
  (def: pCheese-croquettes 4.2)
  (def: pMayo 1.5)
  (def: pKetchup 1.5)

  (def: price (list))
  (def: order (list))
  (def: customerID 0)
  (def: currentItemID 0)
  (def: total-calories 0)
  (def: max-total-calories 0)
  (def: total 0)
  (def: current-selected-item #f)
   )
 
 (view:
  (def-window 
  ;DRINKS
  (def: drinks-label (message 0 0 100 20 "DRINKS" ))
  (def: fanta-label (message 0 20 100 20 "Fanta: € 3.1" ))
  (def: fanta-plus-e fanta-plus-enable (button 0 40 60 30 "+"))
 
  (def: cola-label (message 135 20 100 20 "Coca Cola: € 3.1"))
  (def: cola-plus-e cola-plus-enable (button 135 40 60 30 "+"))
 
  (def: ice-tea-label (message 270 20 100 20 "Ice Tea: € 3.1"))
  (def: ice-tea-plus-e ice-tea-plus-enable (button 270 40 60 30 "+"))

  (def: orange-juice-label (message 405 20 100 20 "Orange Juice: € 3.1"))
  (def: orange-juice-plus-e orange-juice-plus-enable (button 405 40 60 30 "+"))
    )
  
  ;BURGER
  (def: burger-label (message 0 80  100 20 "BURGERS"))
  (def: big-mac-label (message 0 100 100 20 "Big Mac: € 7.2"))
  (def: big-mac-plus-e big-mac-plus-en (button 0 120 60 30 "+"))
 
  (def: veggie-label (message 135 100 100 20 "Veggie: € 5.1 "))
  (def: veggie-plus-e veggie-plus-en (button 135 120 60 30 "+"))
  
  (def: bacon-label (message 270 100 100 20 "Bacon: € 6.5"))
  (def: bacon-plus-e bacon-plus-en (button 270 120 60 30 "+"))

  (def: chicken-label (message 405 100 100 20 "Chicken: € 7.1"))
  (def: chicken-plus-e chicken-plus-en (button 405 120 60 30 "+"))
  
  ;DESSERT
  (def: dessert-label (message 0 160  100 20 "DESSERTS"))
  (def: chocolate-ice-label (message 0 180 100 20 "Chocolate Ice: € 2.2"))
  (def: chocolate-ice-plus-e chocolate-ice-plus-en (button 0 200 60 30 "+"))

  (def: vanille-ice-label (message 135 180 100 20 "Vanille Ice: € 2.2"))
  (def: vanille-ice-plus-e vanille-ice-plus-en (button 135 200 60 30 "+"))

 
  
  ;SNACKS
  (def: snack-label (message 0 240  100 20 "SNACKS"))
  (def: chicken-nuggets-label (message 0 260 100 20 "Chicken Nuggets: € 4.7"))
  (def: chicken-nuggets-plus-e chicken-nuggets-plus-en (button 0 280 60 30 "+"))
  
  (def: chicken-wings-label (message 135 260 100 20 "Chicken Wings: € 4.7"))
  (def: chicken-wings-plus-e chicken-wings-plus-en (button 135 280 60 30 "+"))
  
  (def: cheese-croquettes-label  (message 270 260 150 20 "Cheese croquettes: 4.7"))
  (def: cheese-croquettes-plus-e cheese-croquettes-plus-en (button 270 280 60 30 "+"))
  
  
  ;FRIES
  (def: fries-label (message 0 320  100 20 "FRIES"))
  (def: fries-small-label (message 0 340 100 20 "Fries Small: € 3.5"))
  (def: fries-small-plus-e fries-small-plus-en (button 0 360 60 30 "+"))
  (def: fries-big-label (message 135 340 100 20 "Fries Big: € 4.7"))
  (def: fries-big-plus-e fries-big-plus-en (button 135 360 60 30 "+"))
  (def: frit-fondue-label  (message 270 340 150 20 "Cheese croquettes: 4.2"))
  (def: frit-fondue-plus-e frit-fondue-plus-en (button 270 360 60 30 "+"))
  ;SALADE
  (def: salade-label (message 0 400  100 20 "SALADES"))
  (def: salade-small-label (message 0 420 100 20 "Salade Small: € 3.5"))
  (def: salade-small-plus-e salade-small-plus-en (button 0 440 60 30 "+"))
  (def: salade-big-label (message 135 420 100 20 "Salade Big: € 6.5"))
  (def: salade-big-plus-e salade-big-plus-en (button 135 440 60 30 "+"))
  ;SAUS
  (def: saus-label (message 0 480 100 20 "SAUS"))
  (def: mayo-label (message 0 500 100 20 "Mayonnaise: € 3.5"))
  (def: mayo-plus-e mayo-plus-en (button 0 520 60 30 "+"))
  (def: ketchup-label (message 135 500 100 20 "Ketchup: € 6.5"))
  (def: ketchup-plus-e ketchup-plus-en (button 135 520 60 30 "+"))
  ;ALLERGIC
  (def: allergic-label (message 0 560 100 20 "ALLERGICS"))
  (def: milk-event milk-enable milk-value (check-box 0 580 40 50 "Milk"))
  (def: eggs-event eggs-enable eggs-value (check-box 55 580 40 50 "Eggs"))
 ; (def: nuts-event nuts-enable nuts-value (check-box 110 580 40 50 "Nuts"))
  
  ;ORDER
  (def: order-list-box-e add-list-box remove-list-box clear-list-box (list-box 0 650 700 200 "ORDER: " (list)))
  (def: remove-event remove-en (button 0 855 50 30 "Remove"))
  
  ;TOTAL
  (def: total-label (message 0 895 50 20 "Total: "))
  (def: sum-total-label (message 50 915 50 20 "0"))
  (def: payer-event payer-enable (button 0 935 60 30 "Payer"))
  (def: abort-event abort-enable (button 65 935 60 30 "Abort"))
  

  

  )
 (react:
  
    (reactor: selected-for-remove-reactor
              (in: list-box)
              (out: list-box))
    
     (reactor: remove-reactor
              (in: button #:model selected-index order)
              (def: index (map: button selected-index))
              (def: index-e (filter: index index))
              (def: itemID (map: index-e (list-ref order index-e))) 
              (def: nothing (map: index-e ?))
              (out: itemID nothing nothing nothing))

    (deploy: selected-for-remove-reactor with: order-list-box-e as: selected-for-remove)
    (update: current-selected-item with: selected-for-remove)
    (deploy:  remove-reactor with: remove-event current-selected-item order as: remove)
    (remove-collect1: remove as: fries)
    (remove-collect1: remove as: burger)
    (remove-collect1: remove as: saus)
    (remove-collect1: remove as: ice)
    (remove-collect1: remove as: salade)
    (remove-collect1: remove as: drink)
    (remove-collect1: remove as: snack)
    (remove-collect1: remove as: menu)
    (remove-collect1: remove as: menu-promo)
              
    (reactor: add-ID-reactor
              (in: button #:model type itemID customerID price)
              (def: new-itemID (map: button itemID))
              (def: new-customerID (map: button customerID))
              (def: new-type (map: button type))
              (def: new-price (map: button price))
              (out: new-itemID new-customerID new-type new-price))

    
    (reactor: allergic-reactor
              (in: check-box)
              (def: value (map: check-box (not check-box)))
              (out: value))

    (deploy: allergic-reactor with: milk-event as: milk-allergic)
    (deploy: allergic-reactor with: eggs-event as: eggs-allergic)
    (update: bacon-plus-en with: eggs-allergic)
    (update: chicken-plus-en with: eggs-allergic)
    (update: vanille-ice-plus-en with: milk-allergic)
    (update: chocolate-ice-plus-en with: milk-allergic)
    
    
    (reactor: update-order-list-reactor 
            (in: button-event #:model  type current-item-id order)
            (def: new-item-id (map: button-event (+ current-item-id 1)))
            (def: new-order (map: new-item-id (append order (list new-item-id))))
            (def: type-label (map: button-event (symbol->string type)))
            
            (out: type-label new-order new-item-id))

    (reactor: update-total-reactor
              (in: button-event #:model price total)
              (def: new-total (map: button-event (+ price total)))
              (def: label-new-total (map: new-total (number->string new-total)))
              (out: new-total label-new-total))
    
    
    (deploy: update-total-reactor with: fanta-plus-e pFanta total as: fanta-total)
    (update: total sum-total-label with: fanta-total )
    (deploy: update-order-list-reactor with: fanta-plus-e fanta currentItemID order as: fanta-order-list)
    (update: add-list-box order currentItemID with: fanta-order-list)
    (deploy: add-ID-reactor with: fanta-plus-e fanta currentItemID customerID pFanta as: fanta-id)
    (add-collect1: fanta-id as: drink for: -1)
    
  
   
    (update: currentItemID nothing nothing nothing with: fanta-id)

    (deploy: update-order-list-reactor with: cola-plus-e cola currentItemID order as: cola-order-list)
    (update: add-list-box order currentItemID with: cola-order-list)
    (deploy: update-total-reactor with: cola-plus-e pCola total as: cola-total)
    (update: total sum-total-label with: cola-total )
    (deploy: add-ID-reactor with: cola-plus-e cola currentItemID customerID pCola as: cola-id)
    (add-collect1: cola-id as: drink for: -1)
  
    (update: currentItemID nothing nothing nothing with: cola-id)


    (deploy: update-order-list-reactor with: ice-tea-plus-e ice-tea currentItemID order as: ice-tea-order-list)
    (update: add-list-box order currentItemID with: ice-tea-order-list)
    (deploy: update-total-reactor with: ice-tea-plus-e pIce-tea total as: ice-tea-total)
    (update: total sum-total-label with: ice-tea-total )
    (deploy: add-ID-reactor with: ice-tea-plus-e ice-tea currentItemID customerID pIce-tea as: ice-tea-id)
    (add-collect1: ice-tea-id as: drink for: -1)
   
    (update: currentItemID nothing nothing nothing with: ice-tea-id)

    (deploy: update-order-list-reactor with: orange-juice-plus-e orange-juice currentItemID order as: orange-juice-order-list)
    (update: add-list-box order currentItemID with: orange-juice-order-list)
    (deploy: update-total-reactor with: orange-juice-plus-e pOrange-juice total as: orange-juice-total)
    (update: total sum-total-label with: orange-juice-total )
    (deploy: add-ID-reactor with: orange-juice-plus-e orange-juice currentItemID customerID pOrange-juice as: orange-juice-id)
    (add-collect1: orange-juice-id as: drink for: -1)
    (update: currentItemID nothing nothing nothing with: orange-juice-id)


    (deploy: update-order-list-reactor with: big-mac-plus-e big-mac currentItemID order as: big-mac-order-list)
    (update: add-list-box order currentItemID with: big-mac-order-list)
    (deploy: update-total-reactor with: big-mac-plus-e pBig-mac total as: big-mac-total)
    (update: total sum-total-label with: big-mac-total )
    (deploy: add-ID-reactor with: big-mac-plus-e big-mac currentItemID customerID pBig-mac as: big-mac-id)
     (add-collect1: big-mac-id as: burger for: -1)
    
    (update: currentItemID nothing nothing nothing with: big-mac-id)

    (deploy: update-order-list-reactor with: veggie-plus-e veggie currentItemID order as: veggie-order-list)
    (update: add-list-box order currentItemID with: veggie-order-list)
    (deploy: update-total-reactor with: veggie-plus-e pVeggie total as: veggie-total)
    (update: total sum-total-label with: veggie-total )
    (deploy: add-ID-reactor with: veggie-plus-e veggie currentItemID customerID pVeggie as: veggie-id)
    (add-collect1: veggie-id as: burger for: -1)

    (update: currentItemID nothing nothing nothing with: veggie-id)

    (deploy: update-order-list-reactor with: chicken-plus-e chicken currentItemID order as: chicken-order-list)
    (update: add-list-box order currentItemID with: chicken-order-list)
    (deploy: update-total-reactor with: chicken-plus-e pChicken total as: chicken-total)
    (update: total sum-total-label with: chicken-total )
    (deploy: add-ID-reactor with: chicken-plus-e chicken currentItemID customerID pChicken as: chicken-id)
  
     (add-collect1: chicken-id as: burger for: -1)
    (update: currentItemID nothing nothing nothing with: chicken-id)

    (deploy: update-order-list-reactor with: bacon-plus-e bacon currentItemID order as: bacon-order-list)
    (update: add-list-box order currentItemID with: bacon-order-list)
    (deploy: update-total-reactor with: bacon-plus-e pBacon total as: bacon-total)
    (update: total sum-total-label with: bacon-total )
    (deploy: add-ID-reactor with: bacon-plus-e bacon currentItemID customerID pBacon as: bacon-id)
      (add-collect1: bacon-id as: burger for: -1)
    (update: currentItemID nothing nothing nothing with: bacon-id)

    (deploy: update-order-list-reactor with: chocolate-ice-plus-e chocolate-ice currentItemID order as: chocolate-ice-order-list)
    (update: add-list-box order currentItemID with: chocolate-ice-order-list)
    (deploy: update-total-reactor with: chocolate-ice-plus-e pChocolate-ice total as: chocolate-ice-total)
    (update: total sum-total-label with: chocolate-ice-total )
    (deploy: add-ID-reactor with: chocolate-ice-plus-e chocolate-ice currentItemID customerID pChocolate-ice as: chocolate-ice-id)
    (add-collect1: chocolate-ice-id as: ice for: -1)
    (update: currentItemID nothing nothing nothing with: chocolate-ice-id)

    (deploy: update-order-list-reactor with: vanille-ice-plus-e vanille-ice currentItemID order as: vanille-ice-order-list)
    (update: add-list-box order currentItemID with: vanille-ice-order-list)
    (deploy: update-total-reactor with: vanille-ice-plus-e pVanille-ice total as: vanille-ice-total)
    (update: total sum-total-label with: vanille-ice-total )
    (deploy: add-ID-reactor with: vanille-ice-plus-e vanille-ice currentItemID customerID pVanille-ice as: vanille-ice-id)
    (add-collect1: vanille-ice-id as: ice for: -1)
    (update: currentItemID nothing nothing nothing with: vanille-ice-id)


    (deploy: update-order-list-reactor with: chicken-nuggets-plus-e chicken-nuggets currentItemID order as: chicken-nuggets-order-list)
    (update: add-list-box order currentItemID with: chicken-nuggets-order-list)
    (deploy: update-total-reactor with: chicken-nuggets-plus-e pChicken-nuggets total as: chicken-nuggets-total)
    (update: total sum-total-label with: chicken-nuggets-total )
    (deploy: add-ID-reactor with: chicken-nuggets-plus-e chicken-nuggets currentItemID customerID pChicken as: chicken-nuggets-id)
    (add-collect1: chicken-nuggets-id as: snack for: -1)
    (update: currentItemID nothing nothing nothing with: chicken-nuggets-id)

    (deploy: update-order-list-reactor with: chicken-wings-plus-e chicken-wings currentItemID order as: chicken-wings-order-list)
    (update: add-list-box order currentItemID with: chicken-wings-order-list)
    (deploy: update-total-reactor with: chicken-wings-plus-e pChicken-wings total as: chicken-wings-total)
    (update: total sum-total-label with: chicken-wings-total )
    (deploy: add-ID-reactor with: chicken-wings-plus-e chicken-wings currentItemID customerID pChicken-wings as: chicken-wings-id)
    (add-collect1: chicken-wings-id as: snack for: -1)
    (update: currentItemID nothing nothing nothing with: chicken-wings-id)

    (deploy: update-order-list-reactor with: cheese-croquettes-plus-e cheese-croquettes currentItemID order as: cheese-croquettes-order-list)
    (update: add-list-box order currentItemID with: cheese-croquettes-order-list)
    (deploy: update-total-reactor with: cheese-croquettes-plus-e pCheese-croquettes total as: cheese-croquettes-total)
    (update: total sum-total-label with: cheese-croquettes-total )
    (deploy: add-ID-reactor with: cheese-croquettes-plus-e cheese-croquettes currentItemID customerID pCheese-croquettes as: cheese-croquettes-id)
    (add-collect1: cheese-croquettes-id as: snack for: -1)
    (update: currentItemID nothing nothing nothing with: cheese-croquettes-id)

    (deploy: update-order-list-reactor with: fries-small-plus-e fries-small currentItemID order as: fries-small-order-list)
    (update: add-list-box order currentItemID with: fries-small-order-list)
    (deploy: update-total-reactor with: fries-small-plus-e pFries-small total as: fries-small-total)
    (update: total sum-total-label with: fries-small-total )
    (deploy: add-ID-reactor with: fries-small-plus-e small? currentItemID customerID pFries-small as: fries-small-id)
    (add-collect1: fries-small-id as: fries for: -1)
    (update: currentItemID nothing nothing nothing with: fries-small-id)

    (deploy: update-order-list-reactor with: fries-big-plus-e fries-big currentItemID order as: fries-big-order-list)
    (update: add-list-box order currentItemID with: fries-big-order-list)
    (deploy: update-total-reactor with: fries-big-plus-e pFries-big total as: fries-big-total)
    (update: total sum-total-label with: fries-big-total )
    (deploy: add-ID-reactor with: fries-big-plus-e big? currentItemID customerID pFries-big as: fries-big-id)
    (add-collect1: fries-big-id as: fries for: -1)
    (update: currentItemID nothing nothing nothing with: fries-big-id)

    (deploy: update-order-list-reactor with: salade-small-plus-e salade-small currentItemID order as: salade-small-order-list)
    (update: add-list-box order currentItemID with: salade-small-order-list)
    (deploy: update-total-reactor with: salade-small-plus-e pSalade-small total as: salade-small-total)
    (update: total sum-total-label with: salade-small-total )
    (deploy: add-ID-reactor with: salade-small-plus-e small? currentItemID customerID pSalade-small as: salade-small-id)
    (add-collect1: salade-small-id as: salade for: -1)
    
    (update: currentItemID nothing nothing nothing with: salade-small-id)

    (deploy: update-order-list-reactor with: salade-big-plus-e salade-big currentItemID order as: salade-big-order-list)
    (update: add-list-box order currentItemID with: salade-big-order-list)
    (deploy: update-total-reactor with: salade-big-plus-e pSalade-big total as: salade-big-total)
    (update: total sum-total-label with: salade-big-total )
    (deploy: add-ID-reactor with: salade-big-plus-e big? currentItemID customerID pSalade-big as: salade-big-id)
    (add-collect1: salade-big-id as: salade for: -1)
    (update: currentItemID nothing nothing nothing with: salade-big-id)

    (deploy: update-order-list-reactor with: frit-fondue-plus-e frit-fondue currentItemID order as: frit-fondue-order-list)
    (update: add-list-box order currentItemID with: frit-fondue-order-list)
    (deploy: update-total-reactor with: frit-fondue-plus-e pFrit-fondue total as: frit-fondue-total)
    (update: total sum-total-label with: frit-fondue-total )
    (deploy: add-ID-reactor with: frit-fondue-plus-e frit-fondue currentItemID customerID pFrit-fondue as: frit-fondue-id)
    (add-collect1: frit-fondue-id as: frit-fondue for: -1)
    (update: currentItemID nothing nothing nothing with: frit-fondue-id)

    (deploy: update-order-list-reactor with: mayo-plus-e mayo currentItemID order as: mayo-order-list)
    (update: add-list-box order currentItemID with: mayo-order-list)
    (deploy: update-total-reactor with: mayo-plus-e pMayo total as: mayo-total)
    (update: total sum-total-label with: mayo-total )
    (deploy: add-ID-reactor with: mayo-plus-e mayo currentItemID customerID pMayo as: mayo-id)
       (add-collect1: mayo-id as: saus for: -1)
    
    (update: currentItemID nothing nothing nothing with: mayo-id)

    (deploy: update-order-list-reactor with: ketchup-plus-e ketchup currentItemID order as: ketchup-order-list)
    (update: add-list-box order currentItemID with: ketchup-order-list)
    (deploy: update-total-reactor with: ketchup-plus-e pKetchup total as: ketchup-total)
    (update: total sum-total-label with: ketchup-total )
    (deploy: add-ID-reactor with: ketchup-plus-e ketchup currentItemID customerID pKetchup as: ketchup-id)
    (add-collect1: ketchup-id as: saus for: -1)
    (update: currentItemID nothing nothing nothing with: ketchup-id)


    
  (reactor: add-item-reactor
            (in: itemIDs customerID info price #:model  order  total )
            (def: new-total (map: price (+ total price))) 
            (def: label (map: info (symbol->string info)))
             (def: new-order (map: itemIDs (append order (list itemIDs)))) 
              
            (out: label new-total new-order ))


  
 
  (reactor: remove-logic-reactor
            (in: itemID customerID type price #:model order total)
            (def: index (map: itemID (index-of  order itemID)))
            (def: new-order (map: index (remove (list-ref order index)
                                                 order)))
            (def: selected (map: itemID #f))
            (def: new-total (map: price (- total price)))
            (def: string-new-total (map: new-total (number->string new-total)))
            (out: new-order selected index new-total string-new-total))

  (reactor: nothing-reactor
            (in: i x y z)
            (out: i x y z))
            
  (forall: (fries (?itemID ?customerID ?type ?price))
           (add-deploy: nothing-reactor as: nothing1)
           (remove-deploy: remove-logic-reactor order total as: remove-fries))

 (forall: (snack (?itemID ?customerID ?type ?price))
          (add-deploy: nothing-reactor as: nothing1)
          (remove-deploy: remove-logic-reactor order total as: remove-snack))

 (forall: (ice (?itemID ?customerID ?type ?price))
          (add-deploy: nothing-reactor as: nothing1)
          (remove-deploy: remove-logic-reactor order total as: remove-ice))

 

  (forall: (burger (?itemID ?customerID ?type ?price))
           (add-deploy: nothing-reactor as: nothing1)
           (remove-deploy: remove-logic-reactor order total as: remove-burger))



  (forall: (drink (?itemID ?customerID ?type ?price))
           (add-deploy: nothing-reactor as: nothing1)
           (remove-deploy: remove-logic-reactor order total as: remove-drink))

  (forall: (salade (?itemID ?customerID ?type ?price))
           (add-deploy: nothing-reactor as: nothing1)
           (remove-deploy: remove-logic-reactor order total as: remove-salade))

    (forall: (saus (?itemID ?customerID ?type ?price))
             (add-deploy: nothing-reactor as: nothing1)
             (remove-deploy: remove-logic-reactor order total as: remove-saus))


  (update: order current-selected-item remove-list-box total sum-total-label with: remove-drink)
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-burger)
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-fries)
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-saus)
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-salade)
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-ice)
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-snack)
  

  (reactor: add-to-order-reactor
            (in: itemIDs customerID type price #:model total order)
            (def: label (map: type (symbol->string type)))
            (def: new-total (map: price (+ total price)))
            (def: new-order (map: itemIDs (append  order
                                                  (list itemIDs))))
            (def: string-new-total (map: new-total (number->string new-total)))
            (out: label new-total new-order string-new-total))
            
  (forall: (menu (?itemID ?customerID ?type ?price))
           (add-deploy: add-to-order-reactor  order total as: add-menu)
           (remove-deploy: remove-logic-reactor order total as: remove-menu))

  (forall:  (menu-promo (?itemIDs ?customerID ?info ?new-price) )
            (add-deploy: add-to-order-reactor order total as: add-menu-promo)
            (remove-deploy: remove-logic-reactor order total as: remove-menu-promo))

  (update: add-list-box total order sum-total-label with: add-menu)
  
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-menu)

  (update: add-list-box total order sum-total-label with: add-menu-promo)
  
  (update: order current-selected-item remove-list-box total sum-total-label with: remove-menu-promo)

  (rule: menu-saus where:
         (fries (?friesID ?customerID ?small ?friesPrice))
         (saus (?sausID ?customerID ?type ?saus-price))
         (salade (?itemIDSalade ?customerID ?small ?saladePrice) )
         then: (add: (fact: menu
                            (list ?friesID ?itemIDSalade ?sausID)
                            ?customerID
                            (sym menu-saus)
                            (iff ?small 6.5 9.5)) for: -1))

  (rule: menu-chicken-bacon where:
         (salade (?itemIDSalade ?customerID ?small ?saladePrice) (equal? ?small #f))
         (drink (?drinkIDDrink ?customerID ?drinkType ?drinkPrice))
         (burger (?burgerID ?customerID ?burgerType ?burgerPrice) (or
                                                                   (equal? (sym bacon) ?burgerType)
                                                                   (equal? (sym chicken) ?burgerType)))
         then: (add: (fact: menu
                            (list ?itemIDFries ?itemIDDrink ?itemIDBurger)
                            ?customerID
                            (sym chicken-or-bacon-menu)
                            (iff ?small (iff (equal? (sym bacon)
                                                    ?burgerType)
                                            11.4 13.4)
                                 (iff (equal? (sym bacon)
                                                    ?burgerType)
                                            8.4 11.4))) for: -1))
  
  
  (rule: menu-veggie where:
         (fries (?itemIDFries ?customerID ?small ?friesPrice) (equal? #f ?small))
         (drink (?itemIDDrink ?customerID ?typeDrink ?drink-price))
         (burger (?itemIDBurger ?customerID ?typeBurger ?burger-price) (equal? (sym veggie)
                                                                 ?typeBurger))
         then: (add: (fact: menu
                            (list ?itemIDFries ?itemIDDrink ?itemIDBurger)
                            ?customerID
                            (sym menu-veggie);(list ?customerID ?typeDrink ?typeBurger)
                            10.5) for: -1))
  
  
  
  (rule: menu-big-mac where:
         (fries (?itemIDFries ?customerID ?small ?friesPrice) )
         (drink (?itemIDDrink ?customerID ?typeDrink ?drink-price))
         (burger (?itemIDBurger ?customerID ?typeBurger ?burger-price) (equal? (sym big-mac)
                                                                 ?typeBurger))
         then: (add: (fact: menu
                            (list ?itemIDFries ?itemIDDrink ?itemIDBurger)
                            ?customerID
                            (sym menu-big-mac);(list ?customerID ?typeDrink ?typeBurger)
                            (iff ?small 11.5 12.5)) for: -1))


  (rule: remove where:
        (burger (?itemIDBurger ?customerID ?typeBurger ?burger-price) )                                                                 
        (menu ((?itemIDFries ?itemIDDrink ?itemIDBurger ) ?customerID ?info ?price))
         then: (remove: (fact: burger  ?itemIDBurger ?customerID ?typeBurger ?burger-price)))

  (rule: remove where:
        (drink (?itemIDDrink ?customerID ?typeDrink ?drinkprice))
        (menu ((?itemIDFries ?itemIDDrink ?itemIDBurger) ?customerID ?info ?price))
         then: (remove: (fact: drink  ?itemIDDrink ?customerID ?typeDrink ?drinkprice)))
  

  (rule: remove where:
         (fries (?itemIDFries ?customerID ?small ?friesPrice) )
         (menu ((?itemIDFries ?itemIDDrink ?itemIDBurger) ?customerID ?info ?price))
         then: (remove: (fact: fries  ?itemIDFries ?customerID ?small ?friesPrice)))

  (rule: remove where:
         (salade (?itemIDSalade ?customerID ?small ?saladePrice) )
         (menu ((?otherItemID1 ?itemIDSalade ?otherItemID2) ?customerID ?info ?price))
         then: (remove: (fact: salade  ?itemIDSalade ?customerID ?small ?saladePrice)))

  (rule: remove where:
         (salade (?itemIDSalade ?customerID ?small ?saladePrice) )
         (menu ((?itemIDSalade ?otherItemID1 ?otherItemID2) ?customerID ?info ?price))
         then: (remove: (fact: salade  ?itemIDSalade ?customerID ?small ?saladePrice)))

  (rule: remove where:
         (sause (?itemIDSaus ?customerID ?small ?sausePrice) )
         (menu ((?otherItemID1 ?otherItemID2 ?itemIDSaus) ?customerID ?info ?price))
         then: (remove: (fact: saus  ?itemIDSaus ?customerID ?small ?sausPrice)))

  
  
                            
  

  (reactor: session-reactor
            (in: event #:model customerID)
            (def: ID (map: event customerID))
            (out: ID))
  (add: view-name id )
  (deploy: session-reactor with: fanta-plus-e customerID as: session-1)
  (deploy: session-reactor with: cola-plus-e customerID as: session-2)
  (deploy: session-reactor with: ice-tea-plus-e customerID as: session-3)
  (deploy: session-reactor with: orange-juice-plus-e customerID as: session-4)
  (deploy: session-reactor with: veggie-plus-e customerID as: session-5)
  (deploy: session-reactor with: big-mac-plus-e customerID as: session-6)
  (deploy: session-reactor with: chicken-plus-e customerID as: session-7)
  (deploy: session-reactor with: bacon-plus-e customerID as: session-8)
  (deploy: session-reactor with: chocolate-ice-plus-e customerID as: session-9)
  (deploy: session-reactor with: vanille-ice-plus-e customerID as: session-10)
  (deploy: session-reactor with: salade-big-plus-e customerID as: session-11)
  (deploy: session-reactor with: salade-small-plus-e customerID as: session-12)
  (deploy: session-reactor with: fries-small-plus-e customerID as: session-13)
  (deploy: session-reactor with: fries-big-plus-e customerID as: session-14)
  (deploy: session-reactor with: remove-event customerID as: session-15)
  (deploy: session-reactor with:  order-list-box-e customerID as: session-16)
  (add-collect1: session-1 as: session for: 30)
  (add-collect1: session-2 as: session for: 30)
  (add-collect1: session-3 as: session for: 30)
  (add-collect1: session-4 as: session for: 30)
  (add-collect1: session-5 as: session for: 30)
  (add-collect1: session-6 as: session for: 30)
  (add-collect1: session-7 as: session for: 30)
  (add-collect1: session-8 as: session for: 30)
  (add-collect1: session-9 as: session for: 30)
  (add-collect1: session-10 as: session for: 30)
  (add-collect1: session-11 as: session for: 30)
  (add-collect1: session-12 as: session for: 30)
  (add-collect1: session-13 as: session for: 30)
  (add-collect1: session-14 as: session for: 30)
  (add-collect1: session-15 as: session for: 30)
  (add-collect1: session-16 as: session for: 30)
  
  (reactor: session-ended-reactor
            (in: customerID)
            (def: nothing (map: customerID ?))
            (out: nothing customerID nothing nothing))

  (reactor: nothing-1-reactor
            (in: event)
            (out: event))



  
  (forall: (session (?customerID))
           (add-deploy: nothing-1-reactor as: nothing-1)
           (remove-deploy: session-ended-reactor as: session-ended))

  (reactor: reset-buttons-reactor
            (in: ID)
            (def: enable (map: ID #t))
            (out: enable))

  (reactor: reset-check-box-reactor
            (in: ID)
            (def: value (map: ID #f))
            (out: value))
  (forall: (session (?customerID))
           (add-deploy: nothing-1-reactor as: nothing-1)
           (remove-deploy: reset-buttons-reactor as: enable-after-session))

  (forall: (session (?customerID))
           (add-deploy: nothing-1-reactor as: nothing-1)
           (remove-deploy: reset-check-box-reactor as: check-box-after-session))

  (update: bacon-plus-en with: enable-after-session)
  (update: chicken-plus-en with: enable-after-session)
  (update: vanille-ice-plus-en with: enable-after-session)
  (update: chocolate-ice-plus-en with: enable-after-session)

  (update: milk-value with: check-box-after-session)
 ; (update: nuts-value with: check-box-after-session)
  (update: eggs-value with: check-box-after-session)

  ;(add: (fact: session 1) for: 5)

  (remove-collect1: session-ended as: drink)
  (remove-collect1: session-ended as: fries)
  (remove-collect1: session-ended as: burger)
  (remove-collect1: session-ended as: snack)
  (remove-collect1: session-ended as: ice)
  (remove-collect1: session-ended as: salade)
  (remove-collect1: session-ended as: saus)
  (remove-collect1: session-ended as: menu)
  (remove-collect1: session-ended as: menu-promo)
  
         
  
  (deploy: session-reactor with: payer-event customerID as: session-17)
  (remove-collect1: session-17 as: session)
  (deploy: session-reactor with: abort-event customerID as: session-18)
  (remove-collect1: session-18 as: session)
  
 
  (reactor: update-customerID
            (in: event #:model customerID)
            (def: new-customerID (map: event (+ customerID 1)))      
            (out: new-customerID))

  (deploy: update-customerID with: abort-event customerID as: reset-abort)
  (deploy: update-customerID with: payer-event customerID as: reset-payer)
  (update: customerID with: reset-abort)
  (update: customerID with: reset-payer)

  (reactor: loop
            (in: elem)
            (out: elem))
  (forall: (promo (?reduction))
           (add-deploy: nothing-1-reactor as: nothing-2)
           (remove-deploy: loop as: promo-wait))

  (add-collect1: promo-wait as: promo-wait for: 10)

  (forall: (promo-wait (?reduction))
           (add-deploy: nothing-1-reactor as: nothing-2)
           (remove-deploy: loop as: promo-start))
  (add-collect1: promo-start as: promo for: 50)

    (add: (fact: promo 0.5 ) for: 50)
  

  

  ))
  
  
  
